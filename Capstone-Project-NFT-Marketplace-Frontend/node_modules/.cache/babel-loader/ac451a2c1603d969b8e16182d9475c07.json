{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Earl\\\\Desktop\\\\advancing-into-avalanche\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { ethers } from \"ethers\";\nimport AuctionArtifact from \"./artifacts/Auction.json\";\nimport AuctionManagerArtifact from \"./artifacts/AuctionManager.json\";\nimport NFTArtifact from \"./artifacts/ButterflyToken.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFT_ADDRESS = \"0x4013f19d2f672523971ED8D16CAe08513530663f\"; // NFT contract address\nconst AUCTIONMANAGER_ADDRESS = \"0x7f9853602800837cCFB2FE1D97e0820e5BfA8811\"; /// AuctionManager contract address\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auctions: [],\n      // Auctions to display\n      newAuction: {\n        // newAuction is a state variable for the form\n        startPrice: null,\n        endTime: null,\n        tokenId: null,\n        minIncrement: null,\n        directBuyPrice: null\n      },\n      myItems: []\n    };\n  }\n  async init() {\n    if (window.ethereum) {\n      await window.ethereum.enable(); // Enable the Ethereum client\n      this.provider = new ethers.providers.Web3Provider(window.ethereum); // A connection to the Ethereum network\n      this.signer = this.provider.getSigner(); // Holds your private key and can sign things\n      this.setState({\n        currentAddress: await this.signer.getAddress()\n      }); // Set the current address\n      // Step 5 - insert code here to create auction manager and NFT contract objects\n      this._auctionManager = new ethers.Contract(AUCTIONMANAGER_ADDRESS, AuctionManagerArtifact.abi, this.signer);\n      this._nft = new ethers.Contract(NFT_ADDRESS, NFTArtifact.abi, this.signer);\n      this.getItems();\n      this.getAuctions();\n    } else {\n      alert(\"No wallet detected\");\n    }\n  }\n  async getItems() {\n    // Step 6 - insert code here to get NFTs\n    const walletAddress = await this.signer.getAddress();\n    let tokenOwner = null;\n    let counter = 0;\n    const NFTIds = [];\n    do {\n      try {\n        tokenOwner = await this._nft.ownerOf(counter);\n        if (tokenOwner === walletAddress) {\n          NFTIds.push(counter);\n        }\n        counter++;\n      } catch (error) {\n        tokenOwner = null;\n      }\n    } while (tokenOwner != null);\n    this.setState({\n      myItems: NFTIds\n    });\n  }\n  async createAuction() {\n    if (!this.state.newAuction.minIncrement || !this.state.newAuction.directBuyPrice || !this.state.newAuction.startPrice || !this.state.newAuction.endTime || !this.state.newAuction.tokenId) {\n      console.log(this.state.newAuction);\n      return alert(\"Fill all the fields\");\n    }\n    // Step 7 - insert code here to create an auction\n    let {\n      hash: allowance_hash\n    } = await this._nft.approve(AUCTIONMANAGER_ADDRESS, this.state.newAuction.tokenId);\n    console.log(\"Approve Transaction sent! Hash:\", allowance_hash);\n    await this.provider.waitForTransaction(allowance_hash);\n    console.log(\"Transaction mined!\");\n    let {\n      hash\n    } = await this._auctionManager.createAuction(this.state.newAuction.endTime * 60, ethers.utils.parseEther(this.state.newAuction.minIncrement.toString()), ethers.utils.parseEther(this.state.newAuction.directBuyPrice.toString()), ethers.utils.parseEther(this.state.newAuction.startPrice.toString()), NFT_ADDRESS, this.state.newAuction.tokenId);\n    console.log(\"Transaction sent! Hash:\", hash);\n    await this.provider.waitForTransaction(hash);\n    console.log(\"Transaction mined!\");\n    alert(`Transaction sent! Hash: ${hash}`);\n  }\n  async getAuctions() {\n    // Step 8 - insert code here to get auctions\n    let auctionsAddresses = await this._auctionManager.getAuctions();\n    let auctions = await this._auctionManager.getAuctionInfo(auctionsAddresses);\n    let new_auctions = [];\n    for (let i = 0; i < auctions.endTime.length; i++) {\n      let endTime = auctions.endTime[i].toNumber();\n      let tokenId = auctions.tokenIds[i].toNumber();\n      let auctionState = auctions.auctionState[i].toNumber();\n      let startPrice = ethers.utils.formatEther(auctions.startPrice[i]);\n      let directBuyPrice = ethers.utils.formatEther(auctions.directBuy[i]);\n      let highestBid = ethers.utils.formatEther(auctions.highestBid[i]);\n      let owner = auctions.owner[i];\n      let newAuction = {\n        endTime: endTime,\n        startPrice: startPrice,\n        owner: owner,\n        directBuyPrice: directBuyPrice,\n        tokenId: tokenId,\n        highestBid: highestBid,\n        auctionState: auctionState,\n        auctionAddress: auctionsAddresses[i]\n      };\n      new_auctions.push(newAuction);\n    }\n    this.setState({\n      auctions: new_auctions\n    }); // Update the state\n  }\n\n  async setActiveAuction(auction, _this) {\n    // Step 5 - insert code here to create auction contract object\n    _this._auction = new ethers.Contract(auction.auctionAddress, AuctionArtifact.abi, _this.signer);\n    // Step 10 - insert code here to set an active auction\n    let previousBids = await _this._auction.allBids(); // Get the bids\n    let bids = []; // A list of bids\n    for (let i = 0; i < previousBids[0].length; i++) {\n      // Loop through the bids\n      bids.push({\n        // Add the bid to the list\n        bidder: previousBids[0][i],\n        // The bidder\n        bid: ethers.utils.formatEther(previousBids[1][i]) // The bid\n      });\n    }\n\n    auction.bids = bids;\n    let highestBidder = await _this._auction.maxBidder();\n    auction.highestBidder = highestBidder;\n    let minIncrement = await _this._auction.minIncrement();\n    auction.minIncrement = ethers.utils.formatEther(minIncrement);\n    _this.setState({\n      activeAuction: auction\n    }); // Update the state\n  }\n\n  renderAuctionElement(auction, _this) {\n    let state = \"\";\n    if (auction.auctionState === 0) {\n      state = \"Open\";\n    }\n    if (auction.auctionState === 1) {\n      state = \"Cancelled\";\n    }\n    if (auction.auctionState === 2) {\n      state = \"Ended\";\n    }\n    if (auction.auctionState === 3) {\n      state = \"Direct Buy\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"yellow\"\n      },\n      class: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", auction.tokenId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Highest Bid: \", auction.highestBid || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Direct Buy: \", auction.directBuyPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Starting Price: \", auction.startPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Owner: \", auction.owner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"End Time:\", \" \", Math.round((auction.endTime * 1000 - Date.now()) / 1000 / 60), \" \", \"minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Auction State: \", state]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn-primary\",\n        onClick: () => {\n          _this.setActiveAuction(auction, _this);\n        },\n        children: \"See More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n  renderActiveAuction() {\n    let activeAuction = this.state.activeAuction;\n    let state = \"\";\n    if (activeAuction.auctionState === 0) {\n      // If the auction is open\n      state = \"Open\";\n    }\n    if (activeAuction.auctionState === 1) {\n      // If the auction is cancelled\n      state = \"Cancelled\";\n    }\n    if (activeAuction.auctionState === 2) {\n      // If the auction is ended\n      state = \"Ended\";\n    }\n    if (activeAuction.auctionState === 3) {\n      // If the auction is ended by a direct buy\n      state = \"Direct Buy\";\n    }\n    let isOwner = this.state.currentAddress === activeAuction.owner; // Check if the current address is the owner\n    let isAuctionOpen = state === \"Open\"; // Check if the auction is open\n    // let isAuctionCancelled = state === \"Cancelled\"; // Check if the auction is cancelled\n    let highestBidder = \"\";\n    activeAuction.bids.forEach(bid => {\n      if (bid.bid === activeAuction.highestBid) {\n        highestBidder = bid.bidder;\n      }\n    });\n    const isHighestBidder = highestBidder === this.state.currentAddress;\n    let isAuctionEnded = state === \"Ended\" || state === \"Direct Buy\"; // Check if the auction is ended\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn-secondary\",\n          onClick: () => this.setState({\n            activeAuction: null\n          }),\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", activeAuction.tokenId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Highest Bid: \", activeAuction.highestBid || 0, \" AVAX\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Direct Buy: \", activeAuction.directBuyPrice, \" AVAX\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Minimum Increment: \", activeAuction.minIncrement, \" AVAX\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Starting Price: \", activeAuction.startPrice, \" AVAX\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Owner: \", activeAuction.owner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"End Time:\", \" \", Math.round((activeAuction.endTime * 1000 - Date.now()) / 1000 / 60), \" \", \"minutes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Auction State: \", state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Bids\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bidder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Bid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: activeAuction.bids.map(bid => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: bid.bidder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [bid.bid, \" AVAX\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)]\n              }, bid.bidder, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: [isAuctionOpen && !isOwner ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"0.5\",\n            onChange: e => this.setState({\n              bidAmount: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn-primary\",\n            onClick: () => this.placeBid(this.state.bidAmount),\n            children: \"Place Bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this) : null, isOwner && isAuctionOpen && activeAuction.bids.length === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn-danger\",\n          onClick: () => this.cancelAuction(),\n          children: \"Cancel Auction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this) : null, isOwner && isAuctionEnded && activeAuction.bids.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn-secondary\",\n          onClick: () => this.withdrawFunds(),\n          children: \"Withdraw Funds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this) : null, (activeAuction.bids.length === 0 && isOwner || isHighestBidder) && isAuctionEnded ? /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn-secondary\",\n          onClick: () => this.withdrawToken(),\n          children: \"Withdraw Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this);\n  }\n  async placeBid(amount) {\n    if (!amount) return;\n    amount = ethers.utils.parseEther(amount.toString()); // Amount in AVAX\n    // Step 11 - insert code here to place a bid\n    let {\n      hash\n    } = await this._auction.placeBid({\n      value: amount\n    });\n    await this.provider.waitForTransaction(hash);\n    alert(`Transaction sent! Hash: ${hash}`); // Show the transaction hash\n    this.setActiveAuction(this.state.activeAuction, this);\n  }\n  async withdrawToken() {\n    // Step 12 - insert code here to withdraw the NFT\n    let {\n      hash\n    } = await this._auction.withdrawToken();\n    await this.provider.waitForTransaction(hash);\n    alert(`Withdrawal Successful! Hash: ${hash}`);\n    window.location.reload(); // Reload the page\n  }\n\n  async withdrawFunds() {\n    // Step 13 - insert code here to withdraw funds\n    let {\n      hash\n    } = await this._auction.withdrawFunds();\n    await this.provider.waitForTransaction(hash);\n    alert(`Withdrawal Successful! Hash: ${hash}`);\n    window.location.reload(); // Reload the page\n  }\n\n  async cancelAuction() {\n    // Step 14 - insert code here to cancel the auction\n    // Reload the page\n  }\n  componentDidMount() {\n    this.init();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"jumbotron d-flex align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: this.state.activeAuction != null ? this.renderActiveAuction() : /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"auctions row\",\n            children: this.state.auctions.map(auction => this.renderAuctionElement(auction, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"startprice\",\n              class: \"form-label\",\n              children: \"Start Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.newAuction.startPrice,\n              onChange: e => this.setState({\n                newAuction: {\n                  ...this.state.newAuction,\n                  startPrice: parseFloat(e.target.value)\n                }\n              }),\n              type: \"number\",\n              class: \"form-control\",\n              id: \"startprice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"startprice\",\n              class: \"form-label\",\n              children: \"Token Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.newAuction.tokenId,\n              onChange: e => this.setState({\n                newAuction: {\n                  ...this.state.newAuction,\n                  tokenId: parseInt(e.target.value)\n                }\n              }),\n              type: \"number\",\n              class: \"form-control\",\n              id: \"startprice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"form-label\",\n              children: \"Minimum Increment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.newAuction.minIncrement,\n              onChange: e => this.setState({\n                newAuction: {\n                  ...this.state.newAuction,\n                  minIncrement: parseFloat(e.target.value)\n                }\n              }),\n              type: \"number\",\n              class: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"form-label\",\n              children: \"Direct Buy Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.newAuction.directBuyPrice,\n              onChange: e => this.setState({\n                newAuction: {\n                  ...this.state.newAuction,\n                  directBuyPrice: parseFloat(e.target.value)\n                }\n              }),\n              type: \"number\",\n              class: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"form-label\",\n              children: \"Duration In Minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.newAuction.endTime,\n              onChange: e => this.setState({\n                newAuction: {\n                  ...this.state.newAuction,\n                  endTime: parseInt(e.target.value)\n                }\n              }),\n              type: \"number\",\n              class: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => this.createAuction(),\n            class: \"btn btn-primary\",\n            children: \"Create Auction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your items\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), (this.state.myItems || [\"\"]).map(x => `id: ${x} `) || \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","ethers","AuctionArtifact","AuctionManagerArtifact","NFTArtifact","NFT_ADDRESS","AUCTIONMANAGER_ADDRESS","App","Component","constructor","props","state","auctions","newAuction","startPrice","endTime","tokenId","minIncrement","directBuyPrice","myItems","init","window","ethereum","enable","provider","providers","Web3Provider","signer","getSigner","setState","currentAddress","getAddress","_auctionManager","Contract","abi","_nft","getItems","getAuctions","alert","walletAddress","tokenOwner","counter","NFTIds","ownerOf","push","error","createAuction","console","log","hash","allowance_hash","approve","waitForTransaction","utils","parseEther","toString","auctionsAddresses","getAuctionInfo","new_auctions","i","length","toNumber","tokenIds","auctionState","formatEther","directBuy","highestBid","owner","auctionAddress","setActiveAuction","auction","_this","_auction","previousBids","allBids","bids","bidder","bid","highestBidder","maxBidder","activeAuction","renderAuctionElement","background","Math","round","Date","now","renderActiveAuction","isOwner","isAuctionOpen","forEach","isHighestBidder","isAuctionEnded","map","e","bidAmount","target","value","placeBid","cancelAuction","withdrawFunds","withdrawToken","amount","location","reload","componentDidMount","render","parseFloat","parseInt","x"],"sources":["C:/Users/Earl/Desktop/advancing-into-avalanche/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport AuctionArtifact from \"./artifacts/Auction.json\";\r\nimport AuctionManagerArtifact from \"./artifacts/AuctionManager.json\";\r\nimport NFTArtifact from \"./artifacts/ButterflyToken.json\";\r\nconst NFT_ADDRESS = \"0x4013f19d2f672523971ED8D16CAe08513530663f\"; // NFT contract address\r\nconst AUCTIONMANAGER_ADDRESS = \"0x7f9853602800837cCFB2FE1D97e0820e5BfA8811\"; /// AuctionManager contract address\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      auctions: [], // Auctions to display\r\n      newAuction: {\r\n        // newAuction is a state variable for the form\r\n        startPrice: null,\r\n        endTime: null,\r\n        tokenId: null,\r\n        minIncrement: null,\r\n        directBuyPrice: null,\r\n      },\r\n      myItems: [],\r\n    };\r\n  }\r\n  async init() {\r\n    if (window.ethereum) {\r\n      await window.ethereum.enable(); // Enable the Ethereum client\r\n      this.provider = new ethers.providers.Web3Provider(window.ethereum); // A connection to the Ethereum network\r\n      this.signer = this.provider.getSigner(); // Holds your private key and can sign things\r\n      this.setState({ currentAddress: await this.signer.getAddress() }); // Set the current address\r\n      // Step 5 - insert code here to create auction manager and NFT contract objects\r\n      this._auctionManager = new ethers.Contract(\r\n        AUCTIONMANAGER_ADDRESS,\r\n        AuctionManagerArtifact.abi,\r\n        this.signer\r\n       );\r\n    \r\n    this._nft = new ethers.Contract(\r\n        NFT_ADDRESS,\r\n        NFTArtifact.abi,\r\n        this.signer\r\n       );\r\n      this.getItems();\r\n      this.getAuctions();\r\n    } else {\r\n      alert(\"No wallet detected\");\r\n    }\r\n  }\r\n  async getItems() {\r\n    // Step 6 - insert code here to get NFTs\r\n    const walletAddress = await this.signer.getAddress(); \r\nlet tokenOwner = null; \r\nlet counter = 0; \r\nconst NFTIds = []; \r\ndo { \r\n try { \r\n  tokenOwner = await this._nft.ownerOf(counter); \r\n  if (tokenOwner === walletAddress) { \r\n   NFTIds.push(counter); \r\n  } \r\n  counter++; \r\n } catch (error) { \r\n  tokenOwner = null;  } \r\n \r\n} while (tokenOwner != null); \r\nthis.setState({ myItems: NFTIds });\r\n  }\r\n  async createAuction() {\r\n    if (\r\n      !this.state.newAuction.minIncrement ||\r\n      !this.state.newAuction.directBuyPrice ||\r\n      !this.state.newAuction.startPrice ||\r\n      !this.state.newAuction.endTime ||\r\n      !this.state.newAuction.tokenId\r\n    ) {\r\n      console.log(this.state.newAuction);\r\n      return alert(\"Fill all the fields\");\r\n    }\r\n    // Step 7 - insert code here to create an auction\r\n    let { hash: allowance_hash } = await this._nft.approve( \r\n      AUCTIONMANAGER_ADDRESS, \r\n      this.state.newAuction.tokenId \r\n     );  \r\n   console.log(\"Approve Transaction sent! Hash:\", allowance_hash); \r\n   await this.provider.waitForTransaction(allowance_hash);  console.log(\"Transaction mined!\"); \r\n     \r\n   let { hash } = await this._auctionManager.createAuction( \r\n      this.state.newAuction.endTime * 60,  \r\n      ethers.utils.parseEther(this.state.newAuction.minIncrement.toString()),  \r\n      ethers.utils.parseEther(this.state.newAuction.directBuyPrice.toString()),  \r\n      ethers.utils.parseEther(this.state.newAuction.startPrice.toString()),     \r\n      NFT_ADDRESS,  \r\n      this.state.newAuction.tokenId  \r\n     ); \r\n   console.log(\"Transaction sent! Hash:\", hash); \r\n   await this.provider.waitForTransaction(hash);   \r\n   console.log(\"Transaction mined!\"); \r\n   alert(`Transaction sent! Hash: ${hash}`);\r\n  }\r\n  async getAuctions() {\r\n    // Step 8 - insert code here to get auctions\r\n    let auctionsAddresses = await this._auctionManager.getAuctions();  \r\nlet auctions = await this._auctionManager.getAuctionInfo(auctionsAddresses);  \r\n  \r\nlet new_auctions = []; \r\n\r\nfor (let i = 0; i < auctions.endTime.length; i++) { \r\n \tlet endTime = auctions.endTime[i].toNumber(); \r\n \tlet tokenId = auctions.tokenIds[i].toNumber(); \r\n \tlet auctionState = auctions.auctionState[i].toNumber(); \r\n  \r\n \tlet startPrice = ethers.utils.formatEther(auctions.startPrice[i]); \r\n \tlet directBuyPrice = ethers.utils.formatEther(auctions.directBuy[i]); \r\n \tlet highestBid = ethers.utils.formatEther(auctions.highestBid[i]); \r\n  \r\n \tlet owner = auctions.owner[i]; \r\n  \r\n \tlet newAuction = { \r\n  \tendTime: endTime, \r\n  \tstartPrice: startPrice, \r\n  \towner: owner, \r\n  \tdirectBuyPrice: directBuyPrice, \r\n  \ttokenId: tokenId, \r\n  \thighestBid: highestBid, \r\n  \tauctionState: auctionState, \r\n  \tauctionAddress: auctionsAddresses[i], \r\n \t}; \r\n \tnew_auctions.push(newAuction); \r\n\t} \r\nthis.setState({ auctions: new_auctions }); // Update the state\r\n  }\r\n  async setActiveAuction(auction, _this) {\r\n    // Step 5 - insert code here to create auction contract object\r\n    _this._auction = new ethers.Contract( \r\n      auction.auctionAddress, \r\n      AuctionArtifact.abi, \r\n      _this.signer \r\n     );\r\n    // Step 10 - insert code here to set an active auction\r\n    let previousBids = await _this._auction.allBids(); // Get the bids\r\nlet bids = []; // A list of bids\r\nfor (let i = 0; i < previousBids[0].length; i++) {\r\n // Loop through the bids\r\n bids.push({\r\n  // Add the bid to the list\r\n  bidder: previousBids[0][i], // The bidder\r\n  bid: ethers.utils.formatEther(previousBids[1][i]), // The bid\r\n });\r\n}\r\n\r\nauction.bids = bids;\r\nlet highestBidder = await _this._auction.maxBidder();\r\nauction.highestBidder = highestBidder;\r\n\r\nlet minIncrement = await _this._auction.minIncrement();\r\nauction.minIncrement = ethers.utils.formatEther(minIncrement);\r\n_this.setState({ activeAuction: auction }); // Update the state\r\n  }\r\n  renderAuctionElement(auction, _this) {\r\n    let state = \"\";\r\n    if (auction.auctionState === 0) {\r\n      state = \"Open\";\r\n    }\r\n    if (auction.auctionState === 1) {\r\n      state = \"Cancelled\";\r\n    }\r\n    if (auction.auctionState === 2) {\r\n      state = \"Ended\";\r\n    }\r\n    if (auction.auctionState === 3) {\r\n      state = \"Direct Buy\";\r\n    }\r\n    return (\r\n      <div style={{ background: \"yellow\" }} class=\"col\">\r\n        <p>ID: {auction.tokenId}</p> {/* ID of the token */}\r\n        <p>Highest Bid: {auction.highestBid || 0}</p>\r\n        {/* Highest bid */}\r\n        <p>Direct Buy: {auction.directBuyPrice}</p> {/* Direct buy price */}\r\n        <p>Starting Price: {auction.startPrice}</p> {/* Starting price */}\r\n        <p>Owner: {auction.owner}</p> {/* Owner of the token */}\r\n        <p>\r\n          End Time:{\" \"}\r\n          {Math.round((auction.endTime * 1000 - Date.now()) / 1000 / 60)}{\" \"}\r\n          {/* Time left in minutes */}\r\n          minutes\r\n        </p>\r\n        <p>Auction State: {state}</p>\r\n        <button\r\n          class=\"btn-primary\"\r\n          onClick={() => {\r\n            _this.setActiveAuction(auction, _this);\r\n          }}\r\n        >\r\n          See More\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderActiveAuction() {\r\n    let activeAuction = this.state.activeAuction;\r\n\r\n    let state = \"\";\r\n    if (activeAuction.auctionState === 0) {\r\n      // If the auction is open\r\n      state = \"Open\";\r\n    }\r\n    if (activeAuction.auctionState === 1) {\r\n      // If the auction is cancelled\r\n      state = \"Cancelled\";\r\n    }\r\n    if (activeAuction.auctionState === 2) {\r\n      // If the auction is ended\r\n      state = \"Ended\";\r\n    }\r\n    if (activeAuction.auctionState === 3) {\r\n      // If the auction is ended by a direct buy\r\n      state = \"Direct Buy\";\r\n    }\r\n    let isOwner = this.state.currentAddress === activeAuction.owner; // Check if the current address is the owner\r\n    let isAuctionOpen = state === \"Open\"; // Check if the auction is open\r\n    // let isAuctionCancelled = state === \"Cancelled\"; // Check if the auction is cancelled\r\n    let highestBidder = \"\";\r\n    activeAuction.bids.forEach((bid) => {\r\n      if (bid.bid === activeAuction.highestBid) {\r\n        highestBidder = bid.bidder;\r\n      }\r\n    });\r\n    const isHighestBidder = highestBidder === this.state.currentAddress;\r\n    let isAuctionEnded = state === \"Ended\" || state === \"Direct Buy\"; // Check if the auction is ended\r\n    return (\r\n      <div>\r\n        <div class=\"col\">\r\n          <button\r\n            class=\"btn-secondary\"\r\n            onClick={() => this.setState({ activeAuction: null })}\r\n          >\r\n            Go Back\r\n          </button>\r\n          <p>ID: {activeAuction.tokenId}</p> {/* ID of the token */}\r\n          <p>Highest Bid: {activeAuction.highestBid || 0} AVAX</p>\r\n          {/* Highest bid */}\r\n          <p>Direct Buy: {activeAuction.directBuyPrice} AVAX</p>{\" \"}\r\n          {/* Direct buy price */}\r\n          <p>Minimum Increment: {activeAuction.minIncrement} AVAX</p>{\" \"}\r\n          {/* Minimum increment in AVAX */}\r\n          <p>Starting Price: {activeAuction.startPrice} AVAX</p>{\" \"}\r\n          {/* Starting price */}\r\n          <p>Owner: {activeAuction.owner}</p> {/* Owner of the token */}\r\n          <p>\r\n            End Time:{\" \"}\r\n            {Math.round(\r\n              (activeAuction.endTime * 1000 - Date.now()) / 1000 / 60\r\n            )}{\" \"}\r\n            {/* Time left in minutes */}\r\n            minutes\r\n          </p>\r\n          <p>Auction State: {state}</p>\r\n        </div>\r\n        <div class=\"col\">\r\n          <h3>Bids</h3>\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Bidder</th>\r\n                <th>Bid</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {activeAuction.bids.map((bid) => {\r\n                return (\r\n                  <tr key={bid.bidder}>\r\n                    <td>{bid.bidder}</td>\r\n                    <td>{bid.bid} AVAX</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"col\">\r\n          {isAuctionOpen && !isOwner ? (\r\n            <div>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"0.5\"\r\n                onChange={(e) => this.setState({ bidAmount: e.target.value })}\r\n              />\r\n              <button\r\n                class=\"btn-primary\"\r\n                onClick={() => this.placeBid(this.state.bidAmount)}\r\n              >\r\n                Place Bid\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          {isOwner && isAuctionOpen && activeAuction.bids.length === 0 ? (\r\n            <button class=\"btn-danger\" onClick={() => this.cancelAuction()}>\r\n              Cancel Auction\r\n            </button>\r\n          ) : null}\r\n          {isOwner && isAuctionEnded && activeAuction.bids.length > 0 ? (\r\n            <button class=\"btn-secondary\" onClick={() => this.withdrawFunds()}>\r\n              Withdraw Funds\r\n            </button>\r\n          ) : null}\r\n          {((activeAuction.bids.length === 0 && isOwner) || isHighestBidder) &&\r\n          isAuctionEnded ? (\r\n            <button class=\"btn-secondary\" onClick={() => this.withdrawToken()}>\r\n              Withdraw Token\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  async placeBid(amount) {\r\n    if (!amount) return;\r\n    amount = ethers.utils.parseEther(amount.toString()); // Amount in AVAX\r\n    // Step 11 - insert code here to place a bid\r\n    let { hash } = await this._auction.placeBid({ value: amount });  \r\nawait this.provider.waitForTransaction(hash);  \r\nalert(`Transaction sent! Hash: ${hash}`); // Show the transaction hash\r\n    this.setActiveAuction(this.state.activeAuction, this);\r\n  }\r\n\r\n  async withdrawToken() {\r\n    // Step 12 - insert code here to withdraw the NFT\r\n    let { hash } = await this._auction.withdrawToken();\r\nawait this.provider.waitForTransaction(hash);\r\nalert(`Withdrawal Successful! Hash: ${hash}`);\r\n    window.location.reload(); // Reload the page\r\n  }\r\n\r\n  async withdrawFunds() {\r\n    // Step 13 - insert code here to withdraw funds\r\n    let { hash } = await this._auction.withdrawFunds();\r\nawait this.provider.waitForTransaction(hash);\r\nalert(`Withdrawal Successful! Hash: ${hash}`);\r\n    window.location.reload(); // Reload the page\r\n  }\r\n\r\n  async cancelAuction() {\r\n    // Step 14 - insert code here to cancel the auction\r\n    // Reload the page\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.init();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"jumbotron d-flex align-items-center\">\r\n          <div class=\"container\">\r\n            {this.state.activeAuction != null ? (\r\n              this.renderActiveAuction()\r\n            ) : (\r\n              <div class=\"auctions row\">\r\n                {this.state.auctions.map((auction) =>\r\n                  this.renderAuctionElement(auction, this)\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div class=\"container\">\r\n          <form>\r\n            <div class=\"mb-3\">\r\n              <label for=\"startprice\" class=\"form-label\">\r\n                Start Price\r\n              </label>\r\n              <input\r\n                value={this.state.newAuction.startPrice}\r\n                onChange={(e) =>\r\n                  this.setState({\r\n                    newAuction: {\r\n                      ...this.state.newAuction,\r\n                      startPrice: parseFloat(e.target.value),\r\n                    },\r\n                  })\r\n                }\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n                id=\"startprice\"\r\n              />\r\n              <label for=\"startprice\" class=\"form-label\">\r\n                Token Id\r\n              </label>\r\n              <input\r\n                value={this.state.newAuction.tokenId}\r\n                onChange={(e) =>\r\n                  this.setState({\r\n                    newAuction: {\r\n                      ...this.state.newAuction,\r\n                      tokenId: parseInt(e.target.value),\r\n                    },\r\n                  })\r\n                }\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n                id=\"startprice\"\r\n              />\r\n              <label class=\"form-label\">Minimum Increment</label>\r\n              <input\r\n                value={this.state.newAuction.minIncrement}\r\n                onChange={(e) =>\r\n                  this.setState({\r\n                    newAuction: {\r\n                      ...this.state.newAuction,\r\n                      minIncrement: parseFloat(e.target.value),\r\n                    },\r\n                  })\r\n                }\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n              />\r\n              <label class=\"form-label\">Direct Buy Price</label>\r\n              <input\r\n                value={this.state.newAuction.directBuyPrice}\r\n                onChange={(e) =>\r\n                  this.setState({\r\n                    newAuction: {\r\n                      ...this.state.newAuction,\r\n                      directBuyPrice: parseFloat(e.target.value),\r\n                    },\r\n                  })\r\n                }\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n              />\r\n\r\n              <label class=\"form-label\">Duration In Minutes</label>\r\n              <input\r\n                value={this.state.newAuction.endTime}\r\n                onChange={(e) =>\r\n                  this.setState({\r\n                    newAuction: {\r\n                      ...this.state.newAuction,\r\n                      endTime: parseInt(e.target.value),\r\n                    },\r\n                  })\r\n                }\r\n                type=\"number\"\r\n                class=\"form-control\"\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => this.createAuction()}\r\n              class=\"btn btn-primary\"\r\n            >\r\n              Create Auction\r\n            </button>\r\n          </form>\r\n          {/* <button class=\"btn btn-fanger\">Mint NFT</button> */}\r\n          <p>\r\n            Your items\r\n            <br />\r\n            {(this.state.myItems || [\"\"]).map((x) => `id: ${x} `) || \"\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
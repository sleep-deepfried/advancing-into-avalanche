{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Earl/Desktop/New folder (4)/advancing-into-avalanche/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/Users/Earl/Desktop/New folder (4)/advancing-into-avalanche/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"C:/Users/Earl/Desktop/New folder (4)/advancing-into-avalanche/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/Earl/Desktop/New folder (4)/advancing-into-avalanche/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/Earl/Desktop/New folder (4)/advancing-into-avalanche/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/Earl/Desktop/New folder (4)/advancing-into-avalanche/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Earl\\\\Desktop\\\\New folder (4)\\\\advancing-into-avalanche\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { Dialog, DialogActions, DialogContent, DialogContentText, Button, DialogTitle, CircularProgress } from \"@material-ui/core\";\nimport Card from \"./card\";\nimport \"./app.scss\";\nimport { connectToWallet, getContract, mintNFT, configureTokenURI } from \"./util/EtherJSFunctions\";\nimport uploadImage from \"./util/PinataConnection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar uniqueElementsArray = [{\n  type: \"image 1\",\n  image: require(\"./images/stackpe1.png\")\n}, {\n  type: \"image 2\",\n  image: require(\"./images/stackpe2.png\")\n}, {\n  type: \"image 3\",\n  image: require(\"./images/stackpe3.png\")\n}, {\n  type: \"image 4\",\n  image: require(\"./images/stackpe4.png\")\n}];\nfunction shuffleCards(array) {\n  var length = array.length;\n  for (var i = length; i > 0; i--) {\n    var randomIndex = Math.floor(Math.random() * i);\n    var currentIndex = i - 1;\n    var temp = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temp;\n  }\n  return array;\n}\nexport default function App() {\n  _s();\n  var _this = this;\n  var _useState = useState(shuffleCards.bind(null, uniqueElementsArray.concat(uniqueElementsArray))),\n    _useState2 = _slicedToArray(_useState, 2),\n    cards = _useState2[0],\n    setCards = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    openCards = _useState4[0],\n    setOpenCards = _useState4[1];\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    clearedCards = _useState6[0],\n    setClearedCards = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    shouldDisableAllCards = _useState8[0],\n    setShouldDisableAllCards = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    moves = _useState10[0],\n    setMoves = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showModal = _useState12[0],\n    setShowModal = _useState12[1];\n  var _useState13 = useState(JSON.parse(localStorage.getItem(\"bestScore\")) || Number.POSITIVE_INFINITY),\n    _useState14 = _slicedToArray(_useState13, 2),\n    bestScore = _useState14[0],\n    setBestScore = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    contract = _useState16[0],\n    setContract = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    mintedNFTs = _useState18[0],\n    setMintedNFTs = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    wallet = _useState20[0],\n    setWallet = _useState20[1];\n  var timeout = useRef(null);\n  var disable = function disable() {\n    setShouldDisableAllCards(true);\n  };\n  var enable = function enable() {\n    setShouldDisableAllCards(false);\n  };\n  var checkCompletion = function checkCompletion() {\n    if (Object.keys(clearedCards).length === uniqueElementsArray.length) {\n      setShowModal(true);\n      var highScore = Math.min(moves, bestScore);\n      setBestScore(highScore);\n      localStorage.setItem(\"bestScore\", highScore);\n    }\n  };\n  var evaluate = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _openCards, first, second, result, tokenURI, tx, updatedNFTList;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _openCards = _slicedToArray(openCards, 2), first = _openCards[0], second = _openCards[1];\n              if (!(cards[first].type === cards[second].type)) {\n                _context.next = 16;\n                break;\n              }\n              _context.next = 4;\n              return uploadImage(cards[first].image, cards[first].type);\n            case 4:\n              result = _context.sent;\n              tokenURI = configureTokenURI(result.imageHash, cards[first].type, \"This is an image of \".concat(cards[first].type));\n              _context.next = 8;\n              return mintNFT(tokenURI, contract);\n            case 8:\n              tx = _context.sent;\n              // Take the nonce and the transaction ID\n              updatedNFTList = mintedNFTs;\n              updatedNFTList.push({\n                tokenId: tx.nonce,\n                transactionId: tx.hash,\n                ipfsLink: result.imageHash\n              });\n              setMintedNFTs(updatedNFTList);\n              setClearedCards(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, cards[first].type, true));\n              });\n              setOpenCards([]);\n              enable();\n              return _context.abrupt(\"return\");\n            case 16:\n              enable();\n              // This is to flip the cards back after 500ms duration\n              timeout.current = setTimeout(function () {\n                setOpenCards([]);\n              }, 500);\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function evaluate() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleCardClick = function handleCardClick(index) {\n    if (wallet == null) {\n      alert(\"Please refresh and connect to your Core wallet\");\n    } else if (openCards.length === 1) {\n      setOpenCards(function (prev) {\n        return [].concat(_toConsumableArray(prev), [index]);\n      });\n      setMoves(function (moves) {\n        return moves + 1;\n      });\n      disable();\n    } else {\n      clearTimeout(timeout.current);\n      setOpenCards([index]);\n    }\n  };\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var signer, erc721SC;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return connectToWallet();\n          case 2:\n            signer = _context2.sent;\n            _context2.next = 5;\n            return signer.getAddress();\n          case 5:\n            _context2.t0 = _context2.sent;\n            if (!(_context2.t0 !== \"\")) {\n              _context2.next = 12;\n              break;\n            }\n            setWallet(signer);\n            _context2.next = 10;\n            return getContract(signer);\n          case 10:\n            erc721SC = _context2.sent;\n            setContract(erc721SC);\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), []);\n  useEffect(function () {\n    var timeout = null;\n    if (openCards.length === 2) {\n      timeout = setTimeout(evaluate, 300);\n    }\n    return function () {\n      clearTimeout(timeout);\n    };\n  }, [openCards]);\n  useEffect(function () {\n    checkCompletion();\n  }, [clearedCards]);\n  var checkIsFlipped = function checkIsFlipped(index) {\n    return openCards.includes(index);\n  };\n  var checkIsInactive = function checkIsInactive(card) {\n    return Boolean(clearedCards[card.type]);\n  };\n  var handleRestart = function handleRestart() {\n    setClearedCards({});\n    setOpenCards([]);\n    setShowModal(false);\n    setMoves(0);\n    setShouldDisableAllCards(false);\n    // set a shuffled deck of cards\n    setCards(shuffleCards(uniqueElementsArray.concat(uniqueElementsArray)));\n  };\n  var displayMintedNFTs = function displayMintedNFTs(nfts) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Minted NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, _this), nfts.map(function (nft) {\n        return displayNFTData(nft);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, _this);\n  };\n  var displayNFTData = function displayNFTData(_ref3) {\n    var tokenId = _ref3.tokenId,\n      transactionId = _ref3.transactionId,\n      ipfsLink = _ref3.ipfsLink;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"solid\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", \"token ID: \".concat(tokenId)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://testnet.snowtrace.io/tx/\".concat(transactionId),\n          children: \"Link to snowtrace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://gateway.pinata.cloud/ipfs/\".concat(ipfsLink),\n          children: \"Link to Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, _this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Play the Flip card game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select two cards with same content consequtively to make them vanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: cards.map(function (card, index) {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          index: index,\n          isDisabled: shouldDisableAllCards,\n          isInactive: checkIsInactive(card),\n          isFlipped: checkIsFlipped(index),\n          onClick: handleCardClick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moves\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bold\",\n            children: \"Moves:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), \" \", moves]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), localStorage.getItem(\"bestScore\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"high-score\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bold\",\n            children: \"Best Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), \" \", bestScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restart\",\n        children: shouldDisableAllCards ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Minting NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRestart,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: mintedNFTs[0] == null ? \"No NFT Minted\" : displayMintedNFTs(mintedNFTs)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showModal,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Hurray!!! You completed the challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: [\"You completed the game in \", moves, \" moves. Your best score is\", \" \", bestScore, \" moves.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRestart,\n          color: \"primary\",\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RMSa5YZqnBc75H4kIMfannzKs0I=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useRef","Dialog","DialogActions","DialogContent","DialogContentText","Button","DialogTitle","CircularProgress","Card","connectToWallet","getContract","mintNFT","configureTokenURI","uploadImage","uniqueElementsArray","type","image","require","shuffleCards","array","length","i","randomIndex","Math","floor","random","currentIndex","temp","App","bind","concat","cards","setCards","openCards","setOpenCards","clearedCards","setClearedCards","shouldDisableAllCards","setShouldDisableAllCards","moves","setMoves","showModal","setShowModal","JSON","parse","localStorage","getItem","Number","POSITIVE_INFINITY","bestScore","setBestScore","contract","setContract","mintedNFTs","setMintedNFTs","wallet","setWallet","timeout","disable","enable","checkCompletion","Object","keys","highScore","min","setItem","evaluate","first","second","result","tokenURI","imageHash","tx","updatedNFTList","push","tokenId","nonce","transactionId","hash","ipfsLink","prev","current","setTimeout","handleCardClick","index","alert","clearTimeout","signer","getAddress","erc721SC","checkIsFlipped","includes","checkIsInactive","card","Boolean","handleRestart","displayMintedNFTs","nfts","map","nft","displayNFTData","border","textAlign"],"sources":["C:/Users/Earl/Desktop/New folder (4)/advancing-into-avalanche/src/App.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Button,\r\n  DialogTitle,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Card from \"./card\";\r\nimport \"./app.scss\";\r\nimport {\r\n  connectToWallet,\r\n  getContract,\r\n  mintNFT,\r\n  configureTokenURI,\r\n} from \"./util/EtherJSFunctions\";\r\nimport uploadImage from \"./util/PinataConnection\";\r\n\r\nconst uniqueElementsArray = [\r\n  {\r\n    type: \"image 1\",\r\n    image: require(`./images/stackpe1.png`),\r\n  },\r\n  {\r\n    type: \"image 2\",\r\n    image: require(`./images/stackpe2.png`),\r\n  },\r\n  {\r\n    type: \"image 3\",\r\n    image: require(`./images/stackpe3.png`),\r\n  },\r\n  {\r\n    type: \"image 4\",\r\n    image: require(`./images/stackpe4.png`),\r\n  },\r\n];\r\n\r\nfunction shuffleCards(array) {\r\n  const length = array.length;\r\n  for (let i = length; i > 0; i--) {\r\n    const randomIndex = Math.floor(Math.random() * i);\r\n    const currentIndex = i - 1;\r\n    const temp = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temp;\r\n  }\r\n  return array;\r\n}\r\nexport default function App() {\r\n  const [cards, setCards] = useState(\r\n    shuffleCards.bind(null, uniqueElementsArray.concat(uniqueElementsArray))\r\n  );\r\n  const [openCards, setOpenCards] = useState([]);\r\n  const [clearedCards, setClearedCards] = useState({});\r\n  const [shouldDisableAllCards, setShouldDisableAllCards] = useState(false);\r\n  const [moves, setMoves] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [bestScore, setBestScore] = useState(\r\n    JSON.parse(localStorage.getItem(\"bestScore\")) || Number.POSITIVE_INFINITY\r\n  );\r\n  const [contract, setContract] = useState(null);\r\n  const [mintedNFTs, setMintedNFTs] = useState([]);\r\n  const [wallet, setWallet] = useState(null);\r\n  const timeout = useRef(null);\r\n\r\n  const disable = () => {\r\n    setShouldDisableAllCards(true);\r\n  };\r\n  const enable = () => {\r\n    setShouldDisableAllCards(false);\r\n  };\r\n\r\n  const checkCompletion = () => {\r\n    if (Object.keys(clearedCards).length === uniqueElementsArray.length) {\r\n      setShowModal(true);\r\n      const highScore = Math.min(moves, bestScore);\r\n      setBestScore(highScore);\r\n      localStorage.setItem(\"bestScore\", highScore);\r\n    }\r\n  };\r\n  const evaluate = async () => {\r\n    const [first, second] = openCards;\r\n\r\n    if (cards[first].type === cards[second].type) {\r\n      const result = await uploadImage(cards[first].image, cards[first].type);\r\n      const tokenURI = configureTokenURI(\r\n        result.imageHash,\r\n        cards[first].type,\r\n        `This is an image of ${cards[first].type}`\r\n      );\r\n      const tx = await mintNFT(tokenURI, contract);\r\n      // Take the nonce and the transaction ID\r\n      const updatedNFTList = mintedNFTs;\r\n      updatedNFTList.push({\r\n        tokenId: tx.nonce,\r\n        transactionId: tx.hash,\r\n        ipfsLink: result.imageHash,\r\n      });\r\n      setMintedNFTs(updatedNFTList);\r\n      setClearedCards((prev) => ({ ...prev, [cards[first].type]: true }));\r\n      setOpenCards([]);\r\n      enable();\r\n      return;\r\n    }\r\n    enable();\r\n    // This is to flip the cards back after 500ms duration\r\n    timeout.current = setTimeout(() => {\r\n      setOpenCards([]);\r\n    }, 500);\r\n  };\r\n  const handleCardClick = (index) => {\r\n    if (wallet == null) {\r\n      alert(\"Please refresh and connect to your Core wallet\");\r\n    } else if (openCards.length === 1) {\r\n      setOpenCards((prev) => [...prev, index]);\r\n      setMoves((moves) => moves + 1);\r\n      disable();\r\n    } else {\r\n      clearTimeout(timeout.current);\r\n      setOpenCards([index]);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const signer = await connectToWallet();\r\n    if ((await signer.getAddress()) !== \"\") {\r\n      setWallet(signer);\r\n      const erc721SC = await getContract(signer);\r\n      setContract(erc721SC);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let timeout = null;\r\n    if (openCards.length === 2) {\r\n      timeout = setTimeout(evaluate, 300);\r\n    }\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [openCards]);\r\n\r\n  useEffect(() => {\r\n    checkCompletion();\r\n  }, [clearedCards]);\r\n  const checkIsFlipped = (index) => {\r\n    return openCards.includes(index);\r\n  };\r\n\r\n  const checkIsInactive = (card) => {\r\n    return Boolean(clearedCards[card.type]);\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setClearedCards({});\r\n    setOpenCards([]);\r\n    setShowModal(false);\r\n    setMoves(0);\r\n    setShouldDisableAllCards(false);\r\n    // set a shuffled deck of cards\r\n    setCards(shuffleCards(uniqueElementsArray.concat(uniqueElementsArray)));\r\n  };\r\n\r\n  const displayMintedNFTs = (nfts) => {\r\n    return (\r\n      <div>\r\n        <div>Minted NFTs</div>\r\n        {nfts.map((nft) => {\r\n          return displayNFTData(nft);\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  const displayNFTData = ({ tokenId, transactionId, ipfsLink }) => {\r\n    return (\r\n      <div style={{ border: \"solid\" }}>\r\n        <div> {`token ID: ${tokenId}`}</div>\r\n        <div>\r\n          <a href={`https://testnet.snowtrace.io/tx/${transactionId}`}>\r\n            Link to snowtrace\r\n          </a>\r\n        </div>\r\n        <div>\r\n          <a href={`https://gateway.pinata.cloud/ipfs/${ipfsLink}`}>\r\n            Link to Image\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h3>Play the Flip card game</h3>\r\n        <div>\r\n          Select two cards with same content consequtively to make them vanish\r\n        </div>\r\n      </header>\r\n      <div className=\"container\">\r\n        {cards.map((card, index) => {\r\n          return (\r\n            <Card\r\n              key={index}\r\n              card={card}\r\n              index={index}\r\n              isDisabled={shouldDisableAllCards}\r\n              isInactive={checkIsInactive(card)}\r\n              isFlipped={checkIsFlipped(index)}\r\n              onClick={handleCardClick}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <footer>\r\n        <div className=\"score\">\r\n          <div className=\"moves\">\r\n            <span className=\"bold\">Moves:</span> {moves}\r\n          </div>\r\n          {localStorage.getItem(\"bestScore\") && (\r\n            <div className=\"high-score\">\r\n              <span className=\"bold\">Best Score:</span> {bestScore}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"restart\">\r\n          {shouldDisableAllCards ? (\r\n            <div>\r\n              <div>Minting NFT</div>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <CircularProgress />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <Button onClick={handleRestart} color=\"primary\" variant=\"contained\">\r\n              Restart\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <div className=\"score\">\r\n          {mintedNFTs[0] == null\r\n            ? \"No NFT Minted\"\r\n            : displayMintedNFTs(mintedNFTs)}\r\n        </div>\r\n      </footer>\r\n      <Dialog\r\n        open={showModal}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Hurray!!! You completed the challenge\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            You completed the game in {moves} moves. Your best score is{\" \"}\r\n            {bestScore} moves.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleRestart} color=\"primary\">\r\n            Restart\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}